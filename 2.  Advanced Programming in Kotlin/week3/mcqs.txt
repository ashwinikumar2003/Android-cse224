Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Self review: Practice defining listeners in Android
Lambda expressions
Video: VideoFunctions as objects
. Duration: 3 minutes3 min
Video: VideoFunction types
. Duration: 3 minutes3 min
Video: VideoLambda expressions
. Duration: 3 minutes3 min
Reading: ReadingCommon challenges with Lambda expressions
. Duration: 20 minutes20 min
Video: VideoDefining listeners in Android
. Duration: 3 minutes3 min
Reading: ReadingExercise: Practice defining listeners in Android
. Duration: 30 minutes30 min
Reading: ReadingSolution: Practice defining listeners in Android
. Duration: 30 minutes30 min
Practice Quiz: Self review: Practice defining listeners in Android
3 questions
Practice Quiz: Knowledge check: Lambda expressions
5 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Higher-order functions
Collections processing
Self review: Practice defining listeners in Android
Practice Quiz9 minutes • 9 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Self review: Practice defining listeners in Android
Practice Quiz. • 9 min. • 3 total points available.3 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
In the Practice defining listeners in Android exercise, when you ran the code, what did the app show on its screen?

1 / 1 point

A button with text Save Data written on it.


Toast message with text - Data saved


Empty screen

Correct
Correct! You implemented the button code correctly in the layout file. 

2.
Question 2
What was the result of clicking the button with text Save Data?

1 / 1 point

Button disappears


A toast message with text - Data saved appears on the screen.


Nothing happens

Correct
Correct! You implemented the click listener using a lambda expression correctly. 

3.
Question 3
Choose the options with the correct lambda expression syntax implementation.

1 / 1 point

 button.setOnClickListener { println(it.id) }

Correct
Correct! You can define a lambda expression without the parenthesis if the only parameter is the lambda itself and then can if no arbitrary name is assigned to the lambda parameter, access it using it keyword.


button.setOnClickListener { view ->  println(view.id) }

Correct
Correct! You can define a lambda expression without the parenthesis if the only parameter is the lambda itself and then can define an arbitrary name to the lambda parameter. 


button.setOnClickListener( println(it.id) )

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________



Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Knowledge check: Lambda expressions
Lambda expressions
Video: VideoFunctions as objects
. Duration: 3 minutes3 min
Video: VideoFunction types
. Duration: 3 minutes3 min
Video: VideoLambda expressions
. Duration: 3 minutes3 min
Reading: ReadingCommon challenges with Lambda expressions
. Duration: 20 minutes20 min
Video: VideoDefining listeners in Android
. Duration: 3 minutes3 min
Reading: ReadingExercise: Practice defining listeners in Android
. Duration: 30 minutes30 min
Reading: ReadingSolution: Practice defining listeners in Android
. Duration: 30 minutes30 min
Practice Quiz: Self review: Practice defining listeners in Android
3 questions
Practice Quiz: Knowledge check: Lambda expressions
5 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Higher-order functions
Collections processing
Knowledge check: Lambda expressions
Practice Quiz15 minutes • 15 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Knowledge check: Lambda expressions
Practice Quiz. • 15 min. • 5 total points available.5 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
Which of these are correct ways to instantiate a function type. Select all that apply.

1 / 1 point

Using a lambda expression.

Correct
Correct! You can use a lambda expression to instantiate a function type.


Using instance of a user defined class that implements a function type as an interface.

Correct
Correct! You can instantiate a function using a defined class that implements a function type as an interface.


Using the function name.


Using a callable reference to existing declaration using the ‘::’ operator

Correct
Correct! You can use a callable reference such as ‘::functionName’.

2.
Question 2
Which of these is a syntactically valid function type?

1 / 1 point

Int, Int -> (String)


(Int, Int) -> String


(Int) -> Int, String

Correct
Correct! You define the list of parameters enclosed in a parenthesis, followed by arrow notation and the return type.

3.
Question 3
Which of these is a correct lambda expression syntax?

1 / 1 point

x: Int, y: Int -> x * y


x: Int, y: Int -> { x * y }


{ x: Int, y: Int -> x * y }

Correct
Correct! This is the correct syntax.

4.
Question 4
Which of these would output ‘hello world’ when the function defined below is called?

123
fun execute(string: String, function: (String) -> String) { 
 println(function(string))
}

1 / 1 point

execute("hello") { "$it world" }


execute("hello") { "world" }


execute { "hello world" }

Correct
Correct! The implicit argument ‘it’ will contain the value ‘hello’ and hence concatenated string, ‘hello world’ will be printed.

5.
Question 5
Which listener interface provided by the Android framework is used to listen for button press events?

1 / 1 point

View.OnTapListener


View.OnClickListener


View.OnPressListener

Correct
Correct! The ‘View’ class contains an interface ‘OnClickListener’ that has a method ‘onClick’ which gets called on events such as a button press.



__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________


Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Self review: The repeat function
Lambda expressions
Higher-order functions
Video: VideoWhat is a higher-order function?
. Duration: 2 minutes2 min
Video: VideoHigher-order functions in practice
. Duration: 2 minutes2 min
Reading: ReadingMore examples of higher-order functions
. Duration: 30 minutes30 min
Reading: ReadingExercise: The repeat function
. Duration: 30 minutes30 min
Reading: ReadingSolution: The repeat function
. Duration: 30 minutes30 min
Practice Quiz: Self review: The repeat function
3 questions
Practice Quiz: Knowledge check: Higher order functions
4 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Collections processing
Self review: The repeat function
Practice Quiz9 minutes • 9 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Self review: The repeat function
Practice Quiz. • 9 min. • 3 total points available.3 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
While the code in The repeat function exercise uses a function to generate random numbers, which of the following is a valid output for the wheel spin attempts?

1 / 1 point

Attempt 1: 3 

Attempt 2: 10

Attempt 3: 8


Attempt 1: 4 

Attempt 2: 8

Attempt 3: 5


Attempt 1: 3.25

Attempt 2: 6.5

Attempt 3: 8

Correct
Correct! Random.nextInt(10) can return integer values from 0 to 9.

2.
Question 2
Which of the following is the correct function definition for the repeat function?

1 / 1 point

fun repeat(action: (Int) -> Unit)


fun repeat(times: Int, action: (Int) -> Unit)


fun repeat(times: Int, action: () -> Unit)

Correct
Correct! The first parameter represents the number of iterations and the second parameter represents a function type which takes in an integer parameter with its value as the index position in the iteration.

3.
Question 3
Which of the following constructs is the repeat function similar to? 

1 / 1 point

For loop


While loop


If statement

Correct
Correct! The repeat function is similar to a for loop where you define the number of iterations beforehand. 



__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Knowledge check: Higher order functions
Lambda expressions
Higher-order functions
Video: VideoWhat is a higher-order function?
. Duration: 2 minutes2 min
Video: VideoHigher-order functions in practice
. Duration: 2 minutes2 min
Reading: ReadingMore examples of higher-order functions
. Duration: 30 minutes30 min
Reading: ReadingExercise: The repeat function
. Duration: 30 minutes30 min
Reading: ReadingSolution: The repeat function
. Duration: 30 minutes30 min
Practice Quiz: Self review: The repeat function
3 questions
Practice Quiz: Knowledge check: Higher order functions
4 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Collections processing
Knowledge check: Higher order functions
Practice Quiz15 minutes • 15 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Knowledge check: Higher order functions
Practice Quiz. • 15 min. • 4 total points available.4 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
What is a higher-order function?

1 / 1 point

A higher-order function is a function that does not return any value.


A function that takes functions as parameters, or returns a function.


A function that depends on another function for its output.

Correct
Correct! A higher-order function is a functional programming concept that allows function to be passed just as objects of other data types.

2.
Question 2
Which of these is a correct way to call the function greet:

12345678910


fun greet(name: String, function: (name: String) -> Unit) {
 function(name)
}


fun print(name: String) {
 println("Hello $name")
}

1 / 1 point

greet { print(it) } (“Joe”)


greet("Joe", ::print)

Correct
Correct! You can use the :: operator to obtain the reference of a function.


greet("Joe", print)


greet("Joe") { println("Hi $it") }

Correct
Correct! You can pass a function as a lambda expression to a higher-order function.

3.
Question 3
Which of the following constructs is the repeat function similar to? 

1 / 1 point

for loop 


while loop 


If statement 

Correct
Correct! The repeat function is similar to a for loop where you define the number of iterations beforehand. 

4.
Question 4
What is the output of the following code?

123456
val number = 2
var output = 1
repeat(3) { index ->
 output += (index * number)
}
println(output)

1 / 1 point

7


13


6

Correct
Correct, this is the right result.



__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________


Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Self review: Process collections
Lambda expressions
Higher-order functions
Collections processing
Video: VideoCollection processing functions
. Duration: 3 minutes3 min
Video: VideoDefining and using forEach
. Duration: 1 minute1 min
Video: VideoDefining and using map
. Duration: 1 minute1 min
Reading: ReadingPractice using map
. Duration: 20 minutes20 min
Video: VideoDefining and using filter
. Duration: 3 minutes3 min
Reading: ReadingPractice using filter
. Duration: 20 minutes20 min
Video: VideoDefining and using fold
. Duration: 3 minutes3 min
Reading: ReadingPractice using fold
. Duration: 20 minutes20 min
Video: VideoUsing collection processing functions together
. Duration: 4 minutes4 min
Reading: ReadingExercise: Process collections
. Duration: 20 minutes20 min
Reading: ReadingSolution: Process collections
. Duration: 20 minutes20 min
Practice Quiz: Self review: Process collections
3 questions
Practice Quiz: Knowledge check: Collections processing
5 questions
Video: VideoModule summary: Functional programming
. Duration: 2 minutes2 min
Quiz: Module quiz: Functional programming
10 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Self review: Process collections
Practice Quiz9 minutes • 9 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Self review: Process collections
Practice Quiz. • 9 min. • 3 total points available.3 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
What was the sales tax amount output (up to 2 decimal places) when you ran your exercise’s code?

1 / 1 point

8.98


7.71


9.59

Correct
Correct! You correctly implemented the exercise instructions.

2.
Question 2
What would be the sales tax output (up to 2 decimal places) if you change the month to August and the sales tax percentage to 7.5%?

1 / 1 point

5.02


4.95


6.38

Correct
Correct! You correctly implemented the exercise instructions.

3.
Question 3
Which of the following functions does not return a List when called on an instance of List?

1 / 1 point

filter


map


fold

Correct
Correct! The fold function would return an accumulated value starting from an initial value and applying an operation to an accumulated value and each element. 



__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________


Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Knowledge check: Collections processing
Lambda expressions
Higher-order functions
Collections processing
Video: VideoCollection processing functions
. Duration: 3 minutes3 min
Video: VideoDefining and using forEach
. Duration: 1 minute1 min
Video: VideoDefining and using map
. Duration: 1 minute1 min
Reading: ReadingPractice using map
. Duration: 20 minutes20 min
Video: VideoDefining and using filter
. Duration: 3 minutes3 min
Reading: ReadingPractice using filter
. Duration: 20 minutes20 min
Video: VideoDefining and using fold
. Duration: 3 minutes3 min
Reading: ReadingPractice using fold
. Duration: 20 minutes20 min
Video: VideoUsing collection processing functions together
. Duration: 4 minutes4 min
Reading: ReadingExercise: Process collections
. Duration: 20 minutes20 min
Reading: ReadingSolution: Process collections
. Duration: 20 minutes20 min
Practice Quiz: Self review: Process collections
3 questions
Practice Quiz: Knowledge check: Collections processing
5 questions
Video: VideoModule summary: Functional programming
. Duration: 2 minutes2 min
Quiz: Module quiz: Functional programming
10 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Knowledge check: Collections processing
Practice Quiz15 minutes • 15 min
Submit your assignment
Receive grade
To Pass 80% or higher
Your grade
100%
We keep your highest score

Knowledge check: Collections processing
Practice Quiz. • 15 min. • 5 total points available.5 total points

Congratulations! You passed!
Grade received 100%
To pass 80% or higher
1.
Question 1
What is the output of the following code?

123456
var sum = 0
val numberList = listOf(2, 8, 3, 11) 
numberList.forEach { number ->
 sum += number
}
println(sum)

1 / 1 point

2


24


11

Correct
Correct! The code would iterate over each element and then add each element’s value to a variable named sum.

2.
Question 2
What is the output of this code:

123456789101112131415
data class Car(
val color: String,
val amount: Int
)
val list = listOf(
 Car("Black", 43000),
 Car("Red", 30000),
 Car("White", 36000)
)
val output = list.map { 


1 / 1 point

[Car(color=Black, amount=43000), Car(color=Red, amount=30000), Car(color=White, amount=36000)]


[Black, Red, White]


[43000, 30000, 36000]

Correct
Correct! The code transforms the initial list into a new list that contains values of color.

3.
Question 3
What do you expect to get as the output of this code? 

123456789
val list = listOf(1, 3, 4, 7)


val output = list.fold(3) { x, y ->
 x + y
}


println(output)

1 / 1 point

18


3


12

Correct
Correct! The fold function accumulates a value starting from the initial value of 3 and then applies the operation to each element in the list.

4.
Question 4
What output would you expect for this code?

1234567891011121314
val numberMap = mapOf(
 5 to 6,
 3 to 2,
 8 to 7,
 4 to 1
)
val output = numberMap.map { entry ->
 entry.value
}.filter { 
 it > 3


1 / 1 point

17


13


3

Correct
Correct! You correctly computed the outputs of the map, filter and fold functions in the code.

5.
Question 5
What is the output of the code below: 

12345678910111213
data class Car( 
val color: String, 
val amount: Int 
) 
val list = listOf( 
    Car("Black", 43000), 
    Car("Red", 30000), 
    Car("White", 36000) 
)  
val output = list.filter { car -> 


1 / 1 point

[Car(color=Red, amount=30000)]


[Car(color=Black, amount=43000), Car(color=Red, amount=30000), Car(color=White, amount=36000)]



[Car(color=Black, amount=43000), Car(color=White, amount=36000)]


Correct
Correct! This code above filters the ‘car’ elements that have ‘amount’ > 35000, and returns a new list with only those elements that comply with the condition.



__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________



Skip to Main Content
Coursera
Lovely Professional University

SEARCH IN COURSE
Search in course


Ashwini Kumar

Advanced Programming in Kotlin
Week 3
Module quiz: Functional programming
Lambda expressions
Higher-order functions
Collections processing
Video: VideoCollection processing functions
. Duration: 3 minutes3 min
Video: VideoDefining and using forEach
. Duration: 1 minute1 min
Video: VideoDefining and using map
. Duration: 1 minute1 min
Reading: ReadingPractice using map
. Duration: 20 minutes20 min
Video: VideoDefining and using filter
. Duration: 3 minutes3 min
Reading: ReadingPractice using filter
. Duration: 20 minutes20 min
Video: VideoDefining and using fold
. Duration: 3 minutes3 min
Reading: ReadingPractice using fold
. Duration: 20 minutes20 min
Video: VideoUsing collection processing functions together
. Duration: 4 minutes4 min
Reading: ReadingExercise: Process collections
. Duration: 20 minutes20 min
Reading: ReadingSolution: Process collections
. Duration: 20 minutes20 min
Practice Quiz: Self review: Process collections
3 questions
Practice Quiz: Knowledge check: Collections processing
5 questions
Video: VideoModule summary: Functional programming
. Duration: 2 minutes2 min
Quiz: Module quiz: Functional programming
10 questions
Reading: ReadingAdditional resources
. Duration: 5 minutes5 min
Module quiz: Functional programming
Quiz30 minutes • 30 min
Submit your assignment
Due September 24, 11:59 PM ISTSep 24, 11:59 PM IST
Attempts 3 every 8 hours
Receive grade
To Pass 80% or higher
Your grade
97.50%
We keep your highest score

Module quiz: Functional programming
Graded Quiz. • 30 min

DueSep 24, 11:59 PM IST
Congratulations! You passed!
Grade received 97.50%
Latest Submission Grade 97.50%
To pass 80% or higher
1.
Question 1
Which of these are correct ways to instantiate a function type. Select all that apply.

1 / 1 point

Using a lambda expression.

Correct
Correct! You can use a lambda expression to instantiate a function type.


Using a callable reference to existing declaration using the ‘::’ operator

Correct
Correct! You can use a callable reference such as ‘::functionName’.


Using the function name.


Using instance of a user defined class that implements a function type as an interface.

Correct
Correct! You can instantiate a function using a defined class that implements a function type as an interface.

2.
Question 2
Which of these is a correct usage of lambda expression for the given function definition?

123
fun execute(number: Int, function: (Int) -> String) {
 println(function(number))
}

1 / 1 point

execute(100) { "Score $it" }


execute("Score") { "$it 100" }


execute(100) ( "Score $it" )

Correct
Correct! The above function takes in an ‘Int’ argument and then prints a string by concatenating it with the ‘Score’.

3.
Question 3
Which of the these is a correct lambda expression syntax?

1 / 1 point

val difference: (Int, Int) -> Int = x: Int, y: Int -> x - y


val difference: (Int, Int) -> Int = x: Int, y: Int -> { x - y }


val difference: (Int, Int) -> Int = { x: Int, y: Int -> x - y }

Correct
Correct! This is the correct syntax

4.
Question 4
Which listener interface provided by the Android framework is used to listen for a button press event?

1 / 1 point

View.OnPressListener


View.OnTapListener


View.OnClickListener

Correct
Correct! The ‘View’ class contains an interface ‘OnClickListener’ that has a method ‘onClick’ which gets called on events such as a button press.

5.
Question 5
Which of these are higher-order functions? Select all that apply.

0.75 / 1 point

fun display(): (Int) -> Unit


fun display(x: Int) : Unit


fun display(x: (Int)) -> Unit


fun display(x: (Int) -> Unit)

Correct
Correct! This is a higher-order function as it takes another function as a parameter.

You didn’t select all the correct answers
6.
Question 6
What is the output of this code?


1234567
val number = 3
var output = 2
repeat(5) { index ->
 output += (index * number)
}
println(output)


1 / 1 point

47


30


32

Correct
Correct! You correctly calculated the output of the given code.

7.
Question 7
What is the output of the following code?


1234567
var sum = 0

val numberList = listOf(1, 4, 6, 7, 9) 
numberList.forEach { number ->
 sum += number
}
println(sum)

1 / 1 point

27


1


9

Correct
Correct! The above code would iterate over each element and then add each element’s value to variable named ‘sum’.

8.
Question 8
What is the output of this code:

1234567891011121314
data class Chocolate( 
 val flavor: String, 
 val price: Int 
) 
val list = listOf( 
 Chocolate("Dark", 7), 
 Chocolate("Milk", 4), 
 Chocolate("Coffee", 2) 
)
val output = list.map { 


1 / 1 point

[Chocolate(flavor=Dark, price=7), Chocolate(flavor=Milk, price=4), Chocolate(flavor=Coffee, price=2)]


[7, 4, 2]


[Dark, Milk, Coffee]

Correct
Correct! The above code transforms the initial list to a new list that contains values of 'flavor’.

9.
Question 9
What is the output of this code:

1234567891011121314
data class Chocolate( 
 val flavor: String, 
 val price: Int 
) 
val list = listOf( 
 Chocolate("Dark", 7), 
 Chocolate("Milk", 4), 
 Chocolate("Coffee", 2) 
)
val output = list.filter { 


1 / 1 point

[Chocolate(flavor=Coffee, price=2)]


[Chocolate(flavor=Dark, price=7), Chocolate(flavor=Milk, price=4), Chocolate(flavor=Coffee, price=2)]


[Chocolate(flavor=Dark, price=7), Chocolate(flavor=Milk, price=4)]

Correct
Correct! The code above filters the 'chocolate’ elements that have ‘price’ > 3, and returns a new list with only those elements that comply to the condition.

10.
Question 10
What is the output of this code: 

123456
val list = listOf(9, 3, 1, 6) 
val output = list.fold(1) { x, y -> 
 x + y 
} 
println(output)


1 / 1 point

20


1


18

Correct
Correct! The fold function accumulates a value starting from the initial value of ‘1’ and then applies the operation to each element in the list.




